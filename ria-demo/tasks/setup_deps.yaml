- name: Derive short hostname
  ansible.builtin.set_fact:
    short_hostname: "{{ new_hostname.split('.')[0] }}"

- name: Set system hostname
  ansible.builtin.hostname:
    name: "{{ new_hostname }}"
  register: hostname_result

- name: Ensure 127.0.1.1 entry matches hostname (Ubuntu/Debian convention)
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1\s+'
    line: "127.0.1.1 {{ new_hostname }} {{ short_hostname }}"
    create: true
    backup: true

- name: Prevent cloud-init from changing hostname on reboot
  when: guard_cloud_init
  block:
    - name: Preserve hostname in cloud-init
      ansible.builtin.copy:
        dest: /etc/cloud/cloud.cfg.d/99-preserve-hostname.cfg
        owner: root
        group: root
        mode: '0644'
        content: |
          preserve_hostname: true

    - name: (Optional) record hostname for cloud-init clarity
      ansible.builtin.copy:
        dest: /etc/cloud/cloud.cfg.d/99-hostname.cfg
        owner: root
        group: root
        mode: '0644'
        content: |
          hostname: {{ short_hostname }}
          fqdn: {{ new_hostname }}

- name: Install dependencies
  ansible.builtin.package:
    name:
      - curl
      - sudo
      - jq
      - snmp
      - snmpd
      - snmp-mibs-downloader
      - unzip
    state: present
    update_cache: true

- name: Download Helm installation script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: '0755'

- name: Run Helm installation script
  ansible.builtin.shell: /tmp/get_helm.sh
  args:
    creates: /usr/local/bin/helm
  register: helm_install_result
  changed_when: false

- name: Add /usr/local/bin to PATH
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: 'export PATH=$PATH:/usr/local/bin'
  when: helm_install_result.rc == 0

- name: Enable and start snmpd
  service:
    name: snmpd
    enabled: true
    state: started

- name: Remove all agentAddress lines (commented or not, any casing)
  ansible.builtin.replace:
    path: /etc/snmp/snmpd.conf
    regexp: '(?i)^#?\s*agentaddress.*'
    replace: ''
    backup: yes
  notify: restart snmpd

- name: Comment out the 'mibs :' line in /etc/snmp/snmp.conf if not already commented
  ansible.builtin.replace:
    path: /etc/snmp/snmp.conf
    regexp: '^mibs\s*:'
    replace: '#mibs :'
    backup: yes

- name: Ensure snmpd listens on all interfaces (IPv4 + loopback IPv6)
  lineinfile:
    path: /etc/snmp/snmpd.conf
    regexp: '^agentAddress'
    line: 'agentAddress udp:161,udp6:[::1]:161'
    create: yes
    backup: yes
  notify: "restart snmpd"

- name: Set system contact
  lineinfile:
    path: /etc/snmp/snmpd.conf
    regexp: '^sysContact'
    line: "sysContact {{ snmp_syscontact }}"
    insertafter: '^agentAddress.*'
  notify: "restart snmpd"

- name: Set system location
  lineinfile:
    path: /etc/snmp/snmpd.conf
    regexp: '^sysLocation'
    line: "sysLocation {{ snmp_syslocation }}"
    insertafter: '^sysContact.*'
  notify: "restart snmpd"

- name: Add createUser (will be consumed into /var/lib/snmp/snmpd.conf)
  lineinfile:
    path: /etc/snmp/snmpd.conf
    insertafter: EOF
    line: 'createUser {{ snmp_v3_user }} {{ snmp_v3_auth_protocol }} "{{ snmp_v3_auth_pass }}" {{ snmp_v3_priv_protocol }} "{{ snmp_v3_priv_pass }}"'
  notify: "restart snmpd"

- name: Ensure rouser has authPriv
  lineinfile:
    path: /etc/snmp/snmpd.conf
    regexp: '^rouser\s+{{ snmp_v3_user }}\s+priv'
    line: 'rouser {{ snmp_v3_user }} priv'
    insertafter: '^sysLocation.*'
  notify: "restart snmpd"
