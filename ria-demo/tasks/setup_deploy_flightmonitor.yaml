# Deployment of the Example App: https://github.com/skupperproject/skupper-example-hello-world
- name: Ensure FlightMonitor namespace exists
  ansible.builtin.shell: |
    kubectl get namespace {{ app_namespace }} >/dev/null 2>&1 || \
    kubectl create namespace {{ app_namespace }}
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Create FlightMonitor Docker registry secret
  ansible.builtin.shell: >
    kubectl create secret docker-registry pull-secret
    --docker-server=us.icr.io
    --docker-username=iamapikey
    --docker-password={{ registry_pwd }}
    --namespace={{ app_namespace }}
  register: create_secret_result
  failed_when: create_secret_result.rc != 0 and
               "'AlreadyExists'" not in create_secret_result.stderr
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Patch default service account with imagePullSecret
  ansible.builtin.shell: >
    kubectl patch serviceaccount default
    -p '{"imagePullSecrets": [{"name": "pull-secret" }]}'
    --namespace={{ app_namespace }}
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml



- name: FlightMonitor Backend Setup
  when: service_type == 'backend' or service_type == 'full'
  block:
    - name: Create FlightMonitor backend deployment
      ansible.builtin.shell: |
        kubectl create deployment flight-data-provider \
          --image=us.icr.io/hcm-demo-app/backend:latest \
          --port=8080 -n {{ app_namespace }} || true
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Expose FlightMonitor backend service
      ansible.builtin.shell: |
        kubectl expose deployment flight-data-provider \
          --port=8080 --target-port=8080 \
          --name=flight-data-provider --type=ClusterIP -n {{ app_namespace }} || true
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml


- name: FlightMonitor Frontend Setup
  when: service_type == 'frontend'  or service_type == 'full'
  block:
    - name: Create FlightMonitor frontend deployment
      ansible.builtin.shell: |
        kubectl create deployment flight-monitor \
          --image=us.icr.io/hcm-demo-app/frontend:latest \
          --port=8080 -n {{ app_namespace }} || true
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    # - name: Set BACKEND_URL env variable
    #   ansible.builtin.shell: |
    #     kubectl set env deployment/flight-monitor -n {{ app_namespace }}
    #   environment:
    #     KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Expose FlightMonitor frontend service
      ansible.builtin.shell: |
        kubectl expose deployment flight-monitor \
          --port=8080 --target-port=8080 \
          --name=flight-monitor --type=ClusterIP -n {{ app_namespace }} || true
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Create Ingress for flight-monitor
      ansible.builtin.shell: |
        kubectl apply -n {{ app_namespace }} -f - <<EOF
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: flight-monitor-ingress
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: web
        spec:
          rules:
            - http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: flight-monitor
                        port:
                          number: 8080
        EOF
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml