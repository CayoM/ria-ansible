- name: Get public IP
  ansible.builtin.shell: curl -s http://checkip.amazonaws.com
  register: ec2_public_ip

- name: Install k3s
  ansible.builtin.shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--disable traefik --disable servicelb" sh -
  args:
    creates: /usr/local/bin/k3s

- name: Start k3s service
  ansible.builtin.systemd:
    name: k3s
    state: started
    enabled: true

- name: Ensure k3s config is readable
  ansible.builtin.file:
    path: /etc/rancher/k3s/k3s.yaml
    mode: "0755"

- name: Install kubectl binary link
  ansible.builtin.file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Wait for Kubernetes API to become available
  become: false
  retries: 20
  delay: 5
  register: result
  until: result.rc == 0
  ansible.builtin.shell: kubectl get nodes
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Install MetalLB via Helm
  ansible.builtin.shell: helm upgrade --install metallb oci://registry.suse.com/edge/charts/metallb --namespace metallb-system --create-namespace
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Wait for MetalLB to install 
  ansible.builtin.pause: 
    seconds: 30

- name: Copy and apply MetalLB Resources (IP Pool)
  ansible.builtin.shell: |
    kubectl apply -n metallb-system -f - <<EOF
    apiVersion: metallb.io/v1beta1
    kind: IPAddressPool
    metadata:
      name: ip-pool
      namespace: metallb-system
    spec:
      addresses:
      - {{ ec2_public_ip.stdout }}/32
      - {{ ansible_default_ipv4.address }}/32 # Internal IP. If this is not NATted we might ahave issues so maybe double check for identity.
    EOF
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Copy and apply MetalLB Resources (Advert)
  ansible.builtin.shell: |
    kubectl apply -n metallb-system -f - <<EOF
    apiVersion: metallb.io/v1beta1
    kind: L2Advertisement
    metadata:
      name: ip-pool-l2-adv
      namespace: metallb-system
    spec:
      ipAddressPools:
      - ip-pool
    EOF
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Create MetalLB Role
  ansible.builtin.shell: |
    kubectl apply -n metallb-system -f - <<EOF
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: metallb-manager
      namespace: metallb-system
    rules:
      - apiGroups:
          - metallb.io        # MetalLB custom resources
        resources:
          - addresspools      # manage address pools
          - ipaddresspools    # manage IP address pools
          - bgpconfigs        # manage BGP configurations
          - l2configs         # manage L2 configurations
          - l2advertisements  # manage L2 advertisements
        verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
      - apiGroups:
          - apps              # manage MetalLB controller and speaker deployments
        resources:
          - deployments       # manage deployment resources for MetalLB
          - daemonsets        # manage daemonset resources for MetalLB
        verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
      - apiGroups:
          - networking.k8s.io  # for services and related resources
        resources:
          - services           # manage services that MetalLB operate
        verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
    EOF
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Create MetalLB Role
  ansible.builtin.shell: |
    kubectl apply -n metallb-system -f - <<EOF
    kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: mesh-metallb-manager
      namespace: metallb-system
    roleRef:
      kind: Role
      name: metallb-manager
    subjects:
    - kind: ServiceAccount
      name: mesh-rhsi-agent
      namespace: {{ app_namespace }}
    EOF
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml


- name: Add Traefik Helm repo
  ansible.builtin.shell: helm repo add traefik https://traefik.github.io/charts
  args:
    creates: /root/.cache/helm/repository/traefik-index.yaml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Update Helm repos
  ansible.builtin.shell: helm repo update
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Copy traefik.yaml to target
  ansible.builtin.copy:
    src: files/traefik.yaml
    dest: /tmp/traefik.yaml
    mode: '0644'

- name: Install Traefik via Helm with fixed NodePorts
  ansible.builtin.shell: |
    helm upgrade --install traefik traefik/traefik \
      --namespace kube-system \
      --create-namespace \
      -f /tmp/traefik.yaml \
      --wait
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml